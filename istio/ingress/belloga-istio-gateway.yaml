apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: belloga-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "a30441bfef8e841bbb077a6236568237-f31a6266d697c1cb.elb.ap-northeast-2.amazonaws.com"
        - "api.belloga.com" # api endpoint
        - "zipkin.belloga.com"
        - "enterprise.belloga.com"
        - "admin.belloga.com"
--- # zipkinìš© VirtualService
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: belloga-zipkin
spec:
  hosts:
    - "zipkin.belloga.com" # endpoint
  gateways:
    - belloga-gateway
  http:
    - match:
        - uri:
            prefix: /zipkin
      route:
        - destination:
            host: zipkin.istio-system.svc.cluster.local
            port:
              number: 9411

--- # admin frontend VirtualService
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: belloga-admin-frontend
spec:
  hosts:
    - "admin.belloga.com" # endpoint
  gateways:
    - belloga-gateway
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: admin-frontend
            port:
              number: 3000

--- # enterprise frontend VirtualService
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: belloga-enterprise-frontend
spec:
  hosts:
    - "enterprise.belloga.com" # endpoint
  gateways:
    - belloga-gateway
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: enterprise-frontend
            port:
              number: 3000

--- # api VirtualService
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: belloga-api
spec:
  hosts:
    - "a30441bfef8e841bbb077a6236568237-f31a6266d697c1cb.elb.ap-northeast-2.amazonaws.com"
    - "api.belloga.com" # api endpoint
  #- "*"
  gateways:
    - belloga-gateway
  http:
    - match:
        - uri:
            prefix: /api/user
      route:
        - destination:
            host: user-service
            port:
              number: 8080

    - match:
        - uri:
            prefix: /api/data
        - uri:
            prefix: /api/labeled-data
        - uri:
            prefix: /api/labeled-result
      route:
        - destination:
            host: labeling-service
            port:
              number: 8080

    - match:
        - uri:
            prefix: /api/account
      route:
        - destination:
            host: auth-service
            port:
              number: 8080

    - match:
        - uri:
            prefix: /api/point
        - uri:
            prefix: /api/stamp
        - uri:
            prefix: /api/temp-point
        - uri:
            prefix: /api/gift
      route:
        - destination:
            host: point-service
            port:
              number: 8080

    - match:
        - uri:
            prefix: /api/cloud-messaging-token
      route:
        - destination:
            host: firebase-service
            port:
              number: 8080

    - match:
        - uri:
            prefix: /api/raw-data
        - uri:
            prefix: /api/project
      route:
        - destination:
            host: raw-data-service
            port:
              number: 8080
